<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:camel="http://camel.apache.org/schema/spring" xmlns:q0="http://ericsson.com/services/ws_CIL_5/contractssearch"
	xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:osgi="http://www.springframework.org/schema/osgi"
	xmlns:cxf="http://camel.apache.org/schema/cxf" xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xmlns:cxfcore="http://cxf.apache.org/core"
	xmlns:httpj="http://cxf.apache.org/transports/http-jetty/configuration"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/osgi http://www.springframework.org/schema/osgi/spring-osgi.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd
       http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
       http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
       http://cxf.apache.org/transports/http-jetty/configuration http://cxf.apache.org/schemas/configuration/http-jetty.xsd">

	<bean id="commonSpringHelper" class="com.ericsson.tm.core.SpringHelper" />

	<bean id="config" class="com.ericsson.tm.core.config.ConfigService" />

	<bean id="prodcat" class="com.ericsson.tm.prodcat.simple.ProdCatService"
		init-method="init" />

	<!-- <bean id="tmProxyHttpClient" class="com.ericsson.tm.http.client.TmProxyHttpClient" 
		init-method="init"> <constructor-arg name="tmProxyConfig" value="#{cfg.getProperties('TM_PROXY')}" 
		/> </bean> -->

	<!-- <bean id="gsonCustomerProfile" class="org.apache.camel.component.gson.GsonDataFormat"> 
		<property name="unmarshalType" value="com.ericsson.tm.entities.CustomerProfile" 
		/> </bean> -->

	<bean id="gsonGetAllProducts" class="org.apache.camel.component.gson.GsonDataFormat">
		<property name="unmarshalType"
			value="com.ericsson.tm.prodcat.simple.GetAllProductsRequest" />
	</bean>

	<bean id="gsonGetProduct" class="org.apache.camel.component.gson.GsonDataFormat">
		<property name="unmarshalType"
			value="com.ericsson.tm.prodcat.simple.GetProductRequest" />
	</bean>

	<bean id="gsonProduct" class="org.apache.camel.component.gson.GsonDataFormat">
		<property name="unmarshalType"
			value="com.ericsson.tm.prodcat.simple.entities.Product" />
	</bean>

	<bean id="gsonArray" class="org.apache.camel.component.gson.GsonDataFormat">
		<property name="unmarshalType" value="java.util.ArrayList" />
	</bean>

	<bean id="gsonGetProductsForChild" class="org.apache.camel.component.gson.GsonDataFormat">
		<property name="unmarshalType"
			value="com.ericsson.tm.prodcat.simple.GetProductsForChildRequest" />
	</bean>

	<bean id="gsonGetProductsForResource" class="org.apache.camel.component.gson.GsonDataFormat">
		<property name="unmarshalType"
			value="com.ericsson.tm.prodcat.simple.GetProductsForResourceRequest" />
	</bean>

	<bean id="ecmService"
		class="com.ericsson.tm.prodcat.ecm.processors.EcmProdcatProcessor" />


	<cxfcore:bus name="tmPocApiEngine" />

	<httpj:engine-factory bus="tmPocApiEngine">
		<httpj:engine port="9090">
			<httpj:threadingParameters minThreads="10"
				maxThreads="10" />
			<httpj:sessionSupport>false</httpj:sessionSupport>
			<httpj:reuseAddress>true</httpj:reuseAddress>
		</httpj:engine>
	</httpj:engine-factory>

	<!-- <cxf:rsServer id="tmeServer" bus="tmPocApiEngine" address="http://0.0.0.0:9090/tmpoc-api/" 
		serviceClass="com.ericsson.tm.web.TmApiRestEndPoint" /> -->

	<cxf:cxfEndpoint id="cbioEndPoint"
		serviceClass="com.ericsson.services.ws_cil_5.SoaService"
		xmlns:soapenv="http://schemas.xmlsoap.org/wsdl/soap/" wsdlURL="classpath:wsdl/ws_CIL_5_SoaService.wsdl"
		bus="cxf">
		<cxf:properties>
			<entry key="address" value="http://0.0.0.0:9090/soa-simulator/services" />
			<entry key="dataFormat" value="POJO" />
		</cxf:properties>
	</cxf:cxfEndpoint>

	<cxf:rsServer id="prodcatServer" bus="tmPocApiEngine"
		address="http://0.0.0.0:9090/prodcat-api/" serviceClass="com.ericsson.tm.web.NativeSimpleProdcatEndpoint" />

	<cxf:rsServer id="ecmServer" bus="tmPocApiEngine"
		address="http://0.0.0.0:9090/ecm/" loggingFeatureEnabled="true">
		<!-- serviceClass="com.ericsson.tm.prodcat.ecm.processors.EcmProdcatProcessor"> -->
		<!-- serviceClass="com.ericsson.tm.web.EcmProdcatEndpoint"> -->
		<cxf:serviceBeans>
			<ref bean="ecmService" />
		</cxf:serviceBeans>
		<cxf:providers>
			<bean class="org.sns.utils.camel.MyMessageBodyHandler"></bean>
		</cxf:providers>
	</cxf:rsServer>

	<camelContext id="tmapi" xmlns="http://camel.apache.org/schema/spring">

		<!-- <route id="prodcat-simple"> <from uri="cxfrs://bean://prodcatServer" 
			/> <camel:doTry> <camel:when> <camel:simple>${header.CamelHttpPath} == 'getAllProducts'</camel:simple> 
			<camel:unmarshal ref="gsonGetAllProducts" /> <camel:bean beanType="com.ericsson.tm.prodcat.simple.processors.GetAllProductsProcessor" 
			/> <camel:marshal ref="gsonArray" /> </camel:when> <camel:when> <camel:simple>${header.CamelHttpPath} 
			== 'getProduct'</camel:simple> <camel:unmarshal ref="gsonGetProduct" /> <camel:bean 
			beanType="com.ericsson.tm.prodcat.simple.processors.GetProductProcessor" 
			/> <camel:marshal ref="gsonProduct" /> </camel:when> <camel:when> <camel:simple>${header.CamelHttpPath} 
			== 'getProductsForChild'</camel:simple> <camel:unmarshal ref="gsonGetProductsForChild" 
			/> <camel:bean beanType="com.ericsson.tm.prodcat.simple.processors.GetAllProductsForChildProcessor" 
			/> <camel:marshal ref="gsonArray" /> </camel:when> <camel:when> <camel:simple>${header.CamelHttpPath} 
			== 'getProductsForResource'</camel:simple> <camel:unmarshal ref="gsonGetProductsForResource" 
			/> <camel:bean beanType="com.ericsson.tm.prodcat.simple.processors.GetProductsForResourceProcessor" 
			/> <camel:marshal ref="gsonArray" /> </camel:when> <camel:doCatch> <camel:exception>java.lang.Exception</camel:exception> 
			<camel:log message="Exception: ${exception.stacktrace}" /> </camel:doCatch> 
			<camel:doFinally> <camel:log message="Leave-api:${body}" /> </camel:doFinally> 
			</camel:doTry> </route> -->

		<route id="prodcat-ecm">
			<from uri="cxfrs://bean://ecmServer" />
			<camel:doTry>
				<camel:when>
					<camel:simple>${header.operationName} == 'productCategory'</camel:simple>
					<camel:log
						message="Delegating to GetAllProductCategories: Request: ${body}" />
					<camel:to uri="direct:productCategory"></camel:to>
				</camel:when>
				<camel:doCatch>
					<camel:exception>java.lang.Exception</camel:exception>
					<camel:log message="Exception: ${exception.stacktrace}" />
				</camel:doCatch>

				<camel:doFinally>
					<camel:log message="Leave-api:${body}" />
				</camel:doFinally>
			</camel:doTry>
		</route>

		<route id="invoke-productCategory">
			<camel:from uri="direct:productCategory"></camel:from>
			<camel:bean ref="ecmService" method="getAllProductCategories"></camel:bean>
		</route>

		<route>
			<from uri="cxf:bean:cbioEndPoint" />
			<camel:doTry>
				<camel:when>
					<camel:simple>${in.header.operationName} == 'contractsSearch'</camel:simple>
					<camel:bean beanType="com.ericsson.tm.processor.ContractSearchProcessor" />
				</camel:when>
				<camel:when>
					<camel:simple>${in.header.operationName} == 'addressesRead'</camel:simple>
					<camel:bean beanType="com.ericsson.tm.processor.AddressReadProcessor" />
				</camel:when>
				<camel:when>
					<camel:simple>${in.header.operationName} == 'customerRead'</camel:simple>
					<camel:bean beanType="com.ericsson.tm.processor.CustomerReadProcessor" />
				</camel:when>
				<camel:doCatch>
					<camel:exception>java.lang.Exception</camel:exception>
					<camel:log message="Exception: ${exception.stacktrace}" />
				</camel:doCatch>

				<camel:doFinally>
					<camel:log message="Leave-api:${body}" />
				</camel:doFinally>
			</camel:doTry>
		</route>

	</camelContext>
</beans>